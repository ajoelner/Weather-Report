@model WeatherReport.Models.ViewModel.LocationViewModel
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>index</title>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBKTcTwZCYmi11gKuIIktGC2683u0_f43c&callback=initMap">
    </script>

    <script>
        var map;
        var markers = [];
        var uluru = { lat: 38.685, lng: -93.251 };

        function initMap() {
            var geocoder = new google.maps.Geocoder;
            var infowindow = new google.maps.InfoWindow;
            map = new google.maps.Map(document.getElementById('map'),
                {
                    zoom: 4,
                    center: uluru
                });

            google.maps.event.addListener(map, "click", function (e) {

                if (markers.length > 0) {
                    deleteMarkers();
                }

                uluru = { lat: e.latLng.lat(), lng: e.latLng.lng() };

                document.getElementById("lat").value = uluru.lat;
                document.getElementById("lon").value = uluru.lng;

                geocodeLatLng(geocoder, map, infowindow, uluru, markers);

            });

        }

        function clearMarkers() {
            setMapOnAll(null);
        }
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }

        //pulls back the address where the user clicks on the map
        function geocodeLatLng(geocoder, map, infowindow, uluru, markers) {
            geocoder.geocode({ 'location': uluru }, function (results, status) {
                if (status === 'OK') {
                    if (results[0]) {
                        map.setZoom(9);
                        map.setCenter(uluru);
                        var marker = new google.maps.Marker({
                            position: uluru,
                            map: map
                        });
                        markers.push(marker);
                        infowindow.setContent(results[0].formatted_address);
                        infowindow.open(map, marker);

                        document.getElementById("address").value = results[0].formatted_address;
                    } else {
                        window.alert('No results found');
                    }
                } else {
                    window.alert('Geocoder failed due to: ' + status);
                }
            });
        }
    </script>
</head>
<body>
    <div id="map" style="height: 400px;width:100%"></div>

    @* Filling invisible textboxes with the lat long and address of the user click on the map to use to grab the weather report *@
    @using (Html.BeginForm("WeatherByLocation", "Home", FormMethod.Get))
    {
        <div style="visibility:hidden" class="col-lg-10">
            @Html.TextBoxFor(Model => Model.Lat, new { @class = "form-control textbox", id = "lat", placeholder = "", Name = "lat" })
        </div>

        <div style="visibility:hidden" class="col-lg-10">

            @Html.TextBoxFor(Model => Model.Lat, new { @class = "form-control textbox", id = "lon", placeholder = "", Name = "lng" })
        </div>

        <div style="visibility:hidden" class="col-lg-10">
            @Html.TextBoxFor(Model => Model.Address, new { @class = "form-control textbox", id = "address", placeholder = "", Name = "Address" })
        </div>

        <input type="submit" class="btn btn-primary" value="Forcast" />
    }

    <div class="error">
        @Html.ValidationSummary("", new { @class = "text-danger" })
    </div>
</body>
</html>